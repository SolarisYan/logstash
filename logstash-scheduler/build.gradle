apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'spring-boot'

mainClassName = "org.apache.mesos.logstash.scheduler.Application"
ext {
    imageName = imagePrefix + '/logstash-scheduler'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile project(':logstash-commons')

    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-logging:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    compile("org.springframework:spring-messaging")

    compile "org.webjars:react:$reactVer"
    compile "org.webjars:react-router:$reactRouterVer"
    compile "org.webjars.bower:stomp-websocket:$stompWebsocketVer"
    compile "org.webjars:sockjs-client:$sockjsClientVer"
    compile "org.webjars:highcharts:$highchartsVer"

    testCompile("org.springframework:spring-test:4.1.7.RELEASE")
}

jar {
    baseName = "logstash-mesos-scheduler"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } // Include dependencies
    from { project(":logstash-executor").getTasksByName("copyJar", false)[0].outputs.files[0] } // Include executor

    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    manifest {
        attributes(
                'Main-Class': mainClassName,
                'Implementation-Version': project.version
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}

task taskCopyFilesForDocker(type: Copy) {
    dependsOn "copyJar"
}

task copyJar(type: Copy) {
    dependsOn   'bootRepackage'
    from        "build/libs/logstash-mesos-scheduler-${project.version}.jar"
    from        "start-scheduler.sh"
    into        'build/docker'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}
