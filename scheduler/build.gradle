apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-remote-api'
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

mainClassName = "org.apache.mesos.logstash.scheduler.LogstashScheduler"


sourceCompatibility = 1.7
version = '1.0'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.2'
    }
}

run {
    args "-m", "192.168.1.106:5050", "-f", "./conf.conf"
    jvmArgs "-Djava.library.path=/usr/local/lib"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.mesos:mesos:0.21.1'
    compile "commons-cli:commons-cli:1.0"
    compile "log4j:log4j:1.2.16"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    baseName = "logstash-scheduler"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest { attributes 'Main-Class': 'org.apache.mesos.logstash.scheduler.LogstashScheduler' }
}


task copyJar(type: Copy) {
    dependsOn   'jar'
    from        "build/libs/logstash-scheduler-${project.version}.jar"
    into        'build/docker'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn   copyJar
    if (System.env.DOCKER_HOST) {
        url = "$System.env.DOCKER_HOST".replace("tcp","https")
        if (System.env.DOCKER_CERT_PATH) {
            certPath = new File(System.env.DOCKER_CERT_PATH)

        }
    }
    else {
        url = 'unix:///var/run/docker.sock'
    }
    inputDir = file('.')
    tag = 'mesos/logstash-scheduler'
}

build.dependsOn buildDockerImage
build.dependsOn copyJar
