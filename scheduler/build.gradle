apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'spring-boot'

buildscript {
    repositories {
        jcenter { url "http://jcenter.bintray.com/" }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.2'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"
    }
}

applicationDefaultJvmArgs = ["-Dlogstash-mesos.masterUrl=localhost"]

run {
    jvmArgs "-Djava.library.path=/usr/local/lib"
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile project(':common')

    compile 'org.apache.mesos:mesos:0.22.1'

    compile 'commons-io:commons-io:2.4'
    compile 'commons-lang:commons-lang:2.6'

    compile 'org.slf4j:slf4j-api:1.7.12'
    runtime 'ch.qos.logback:logback-classic:1.1.3'

    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")

    compile 'org.webjars:react:0.13.3'
    compile 'org.webjars:react-router:0.13.2'
    compile 'org.webjars.bower:stomp-websocket:2.3.4'
    compile 'org.webjars:sockjs-client:1.0.0'
    compile 'org.webjars:highcharts:4.1.6'

    testCompile 'com.jayway.awaitility:awaitility:1.6.3'
    testCompile 'junit:junit:4.11'
}

shadowJar {
    baseName = "logstash-scheduler-dependencies"

    exclude 'org/apache/mesos/logstash' // only include dependencies
}

jar {
    dependsOn 'createConfig'
    baseName = "logstash-scheduler"
    manifest {
        attributes(
                'Main-Class': 'org.apache.mesos.logstash.scheduler.Application',
                'Class-Path': 'logstash-scheduler-dependencies.jar'
        )
    }
}

task copyJar(type: Copy) {
    dependsOn 'shadowJar', 'jar'

    into 'build/docker'


    from "build/libs/logstash-scheduler-${project.version}.jar"
    from "build/libs/logstash-scheduler-dependencies-${project.version}-all.jar"

    rename { String fileName ->
        fileName.replace("-${project.version}-all", "").replace("-${project.version}", "")

    }
}

task buildDockerImage(type: Exec) {
    dependsOn 'copyJar'

    executable "docker"
    args "build"
    args "-t"
    args "mesos/logstash-scheduler"
    args "."
}

build.dependsOn buildDockerImage
build.dependsOn copyJar
